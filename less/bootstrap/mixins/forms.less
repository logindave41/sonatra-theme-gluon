// Form control focus state

.form-control-focus(@color: @input-border-focus) {
    &:focus {
        .box-shadow(none);
    }
}


// Form control color (checkbox/radio)

.form-control-color(@style, @class-style) {
    @checked-color: "@{style}-checked-color";
    @checked-bg: "@{style}-checked-bg";
    @checked-bg-hover: "@{style}-checked-bg-hover";
    @checked-bg-focus: "@{style}-checked-bg-focus";

    .form-control-md {
        input[type="radio"]@{class-style}:checked {
            + .form-control-md-style {
                &:before {
                    border-color: @@checked-bg;
                }

                &:after {
                    border-color: @@checked-bg;
                    background-color: @@checked-bg;
                }
            }
        }

        // checked
        input[type="checkbox"]@{class-style}:checked,
        input[type="radio"]@{class-style}:checked {
            + .form-control-md-style {
                &:before {
                    border-color: @@checked-bg;
                }
            }

            &:focus,
            &:active {
                + .form-control-md-style {
                    + span {
                        &:before {
                            background-color: @@checked-bg-focus;
                            .box-shadow(0 0 0 @input-radio-checkbox-focus-size @@checked-bg-focus);
                        }
                    }
                }
            }
        }

        input[type="checkbox"]@{class-style}:checked {
            + .form-control-md-style {
                &:before {
                    background-color: @@checked-bg;
                }

                &:after {
                    border-color: @@checked-color;
                }
            }

            + .form-control-md-style:hover {
                &:before {
                    border-color: @@checked-bg-hover;
                    background-color: @@checked-bg-hover;
                }
            }
        }

        input[type="radio"]@{class-style}:checked {
            + .form-control-md-style:hover {
                &:before {
                    border-color: @@checked-bg-hover;
                }

                &:after {
                    border-color: @@checked-bg-hover;
                    background-color: @@checked-bg-hover;
                }
            }
        }

        // disabled
        input[type="checkbox"][disabled]@{class-style},
        input[type="radio"][disabled]@{class-style},
        fieldset[disabled] & input[type="checkbox"]@{class-style},
        fieldset[disabled] & input[type="radio"]@{class-style} {
            + .form-control-md-style {
                &:before {
                    border-color: @input-border-disabled;
                }

                + span {
                    color: @input-color-placeholder-disabled;
                }
            }
        }

        input[type="checkbox"][disabled]@{class-style},
        fieldset[disabled] & input[type="checkbox"]@{class-style} {
            &:checked {
                + .form-control-md-style {
                    &:before {
                        border-color: @input-border-disabled;
                        background-color: @input-border-disabled;
                    }

                    &:after {
                        border-color: @input-color-disabled;
                    }
                }
            }
        }

        input[type="radio"][disabled]@{class-style},
        fieldset[disabled] & input[type="radio"]@{class-style} {
            &:checked {
                + .form-control-md-style {
                    &:before {
                        border-color: @input-border-disabled;
                    }

                    &:after {
                        border-color: @input-border-disabled;
                        background-color: @input-border-disabled;
                    }
                }
            }
        }
    }
}

// Form control color (floating label)

.form-floating-label(@color: @form-floating-label-color) {
    color: @color;
    position: absolute;
    pointer-events: none;
    font-weight: normal;
    left: 0;
    top: (@font-size-base / 2) + 1;
    .transition(@transition);
    .transform-origin(top left);
}

.form-floating-label-top(@paddingVerticalSup: 0) {
    .transform(scale(0.8) translate(0, -(@font-size-base + (@font-size-base / 2)) + (-@padding-base-vertical / 2) + @paddingVerticalSup));
}

// Form control state (floating label)

.form-control-state(@style; @color; @bg; @border) {
    .form-group,
    .floating-group {
        &.has-@{style},
        .has-@{style} & {
            input,
            textarea {
                border-bottom-color: @border;

                &.form-control {
                    .box-shadow(none);
                }

                &,
                &:focus,
                &:active {
                    .box-shadow(none);
                }

                &:focus,
                &.has-floating-content,
                &.fixed-floating-label {
                    ~ label:not(.btn) {
                        color: @color;
                    }
                }
            }

            .floating-bar {
                &:before,
                &:after {
                    background: @border;
                }
            }

            .help-block {
                color: @color;
            }

            input,
            textarea {
                &[disabled],
                &[readonly],
                fieldset[disabled] & {
                    border-color: @input-border-disabled;

                    ~ label:not(.btn) {
                        color: @input-color-placeholder-disabled;
                    }

                    ~ .help-block {
                        color: @input-color-disabled;
                    }
                }
            }
        }
    }
}
